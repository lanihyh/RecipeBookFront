/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package HomeGenius;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.*;
import java.awt.Point;
import java.io.*;
import static java.lang.System.console;
import javax.swing.*;
import javax.swing.text.DefaultCaret;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Image;
import java.util.List;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Rectangle;
import java.nio.file.Path;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author lani
 */
public class AddRecipe extends javax.swing.JFrame {

    /*int maxSteps = 4; // Set the maximum number of steps to 4
    
     */
    /**
     * Creates new form HomeGeniusPanel
     */
    public AddRecipe() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PurpleLayout = new javax.swing.JPanel();
        GreyLayout = new javax.swing.JPanel();
        addRecipe = new javax.swing.JLabel();
        addImage = new javax.swing.JButton();
        instruction = new javax.swing.JLabel();
        recipeName = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        ingredients = new javax.swing.JLabel();
        ingredientBox = new javax.swing.JTextField();
        nameBox = new javax.swing.JTextField();
        cookingTimeBox = new javax.swing.JTextField();
        stepsPlusButt = new javax.swing.JButton();
        recipeNameBox = new javax.swing.JTextField();
        stepsScrollBox = new javax.swing.JScrollPane();
        stepsTextArea = new javax.swing.JTextArea();
        ingredientPlusButt = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        instSeparator2 = new javax.swing.JSeparator();
        stepsPanel = new javax.swing.JPanel();
        instructionsUpper = new javax.swing.JPanel();
        instructions = new javax.swing.JLabel();
        instSeparator1 = new javax.swing.JSeparator();
        nextButt = new javax.swing.JButton();
        prevButt = new javax.swing.JButton();
        ingredientList = new javax.swing.JPanel();
        ingredientsHeader = new javax.swing.JLabel();
        ingSep = new javax.swing.JSeparator();
        ingListScrollPane = new javax.swing.JScrollPane();
        ingListArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Home = new javax.swing.JLabel();
        Genius = new javax.swing.JLabel();
        HouseIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PurpleLayout.setBackground(new java.awt.Color(204, 204, 255));
        PurpleLayout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GreyLayout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addRecipe.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        addRecipe.setForeground(new java.awt.Color(102, 102, 255));
        addRecipe.setText("Add recipe");
        GreyLayout.add(addRecipe, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        addImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/120x120.png"))); // NOI18N
        addImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageActionPerformed(evt);
            }
        });
        GreyLayout.add(addImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 140, 120));

        instruction.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        instruction.setForeground(new java.awt.Color(102, 102, 255));
        instruction.setText("Instructions:");
        GreyLayout.add(instruction, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 190, -1, -1));

        recipeName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        recipeName.setForeground(new java.awt.Color(102, 102, 255));
        recipeName.setText("Name:");
        GreyLayout.add(recipeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 70, -1, -1));

        time.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        time.setForeground(new java.awt.Color(102, 102, 255));
        time.setText("Cooking time:");
        GreyLayout.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 110, -1, -1));

        ingredients.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ingredients.setForeground(new java.awt.Color(102, 102, 255));
        ingredients.setText("Ingredients:");
        GreyLayout.add(ingredients, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        ingredientBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ingredientBox.setForeground(new java.awt.Color(51, 51, 51));
        ingredientBox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ingredientBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientBoxActionPerformed(evt);
            }
        });
        GreyLayout.add(ingredientBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 250, -1));

        nameBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameBox.setForeground(new java.awt.Color(51, 51, 51));
        nameBox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameBoxActionPerformed(evt);
            }
        });
        GreyLayout.add(nameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 75, 250, -1));

        cookingTimeBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cookingTimeBox.setForeground(new java.awt.Color(51, 51, 51));
        cookingTimeBox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cookingTimeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cookingTimeBoxActionPerformed(evt);
            }
        });
        GreyLayout.add(cookingTimeBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 115, 180, -1));

        stepsPlusButt.setBackground(new java.awt.Color(204, 204, 255));
        stepsPlusButt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        stepsPlusButt.setForeground(new java.awt.Color(51, 51, 51));
        stepsPlusButt.setText("+");
        stepsPlusButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepsPlusButtActionPerformed(evt);
            }
        });
        GreyLayout.add(stepsPlusButt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 40, 90));

        recipeNameBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        recipeNameBox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        recipeNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipeNameBoxActionPerformed(evt);
            }
        });
        GreyLayout.add(recipeNameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 75, 250, -1));

        stepsScrollBox.setBackground(new java.awt.Color(255, 255, 255));
        stepsScrollBox.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        stepsScrollBox.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        stepsTextArea.setLineWrap(true);
        stepsTextArea.setWrapStyleWord(true);
        stepsTextArea.setColumns(20);
        stepsTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        stepsTextArea.setForeground(new java.awt.Color(51, 51, 51));
        stepsTextArea.setRows(5);
        stepsTextArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        stepsScrollBox.setViewportView(stepsTextArea);

        GreyLayout.add(stepsScrollBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 250, 90));

        ingredientPlusButt.setBackground(new java.awt.Color(204, 204, 255));
        ingredientPlusButt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ingredientPlusButt.setForeground(new java.awt.Color(51, 51, 51));
        ingredientPlusButt.setText("+");
        ingredientPlusButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientPlusButtActionPerformed(evt);
            }
        });
        GreyLayout.add(ingredientPlusButt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 150, -1, 22));

        backButton.setBackground(new java.awt.Color(204, 204, 255));
        backButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        backButton.setForeground(new java.awt.Color(102, 102, 255));
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        GreyLayout.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 7, 90, 25));

        instSeparator2.setForeground(new java.awt.Color(153, 153, 153));
        GreyLayout.add(instSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 37, 880, 20));

        stepsPanel.setBackground(new java.awt.Color(204, 204, 255));
        stepsPanel.setLayout(new java.awt.GridLayout(2, 2));
        GreyLayout.add(stepsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 680, 110));

        instructionsUpper.setBackground(new java.awt.Color(204, 204, 255));
        instructionsUpper.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        instructions.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        instructions.setForeground(new java.awt.Color(102, 102, 255));
        instructions.setText("Instructions");
        instructionsUpper.add(instructions, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 10, -1, -1));

        instSeparator1.setForeground(new java.awt.Color(153, 153, 153));
        instructionsUpper.add(instSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 660, 10));

        nextButt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        nextButt.setForeground(new java.awt.Color(102, 102, 255));
        nextButt.setText(">");
        nextButt.setEnabled(false);
        nextButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtActionPerformed(evt);
            }
        });
        instructionsUpper.add(nextButt, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 3, 40, 25));

        prevButt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        prevButt.setForeground(new java.awt.Color(102, 102, 255));
        prevButt.setText("<");
        prevButt.setEnabled(false);
        prevButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtActionPerformed(evt);
            }
        });
        instructionsUpper.add(prevButt, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 3, 40, 25));

        GreyLayout.add(instructionsUpper, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 680, -1));

        ingredientList.setBackground(new java.awt.Color(204, 204, 255));
        ingredientList.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ingredientsHeader.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ingredientsHeader.setForeground(new java.awt.Color(102, 102, 255));
        ingredientsHeader.setText("Ingredients");
        ingredientList.add(ingredientsHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 6, -1, -1));

        ingSep.setForeground(new java.awt.Color(123, 123, 187));
        ingredientList.add(ingSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 28, 140, 10));

        ingListScrollPane.setBorder(null);
        ingListScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ingListScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));

        ingListArea.setEditable(false);
        ingListArea.setBackground(new java.awt.Color(204, 204, 255));
        ingListArea.setColumns(20);
        ingListArea.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ingListArea.setForeground(new java.awt.Color(51, 51, 51));
        ingListArea.setRows(5);
        ingListScrollPane.setViewportView(ingListArea);

        ingredientList.add(ingListScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 40, 160, 190));

        GreyLayout.add(ingredientList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 170, 240));

        saveButton.setBackground(new java.awt.Color(102, 102, 255));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        GreyLayout.add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 60, 90, 30));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("minutes");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GreyLayout.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 115, 70, 23));

        PurpleLayout.add(GreyLayout, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 900, 460));

        Home.setFont(new java.awt.Font("Roboto Slab", 1, 18)); // NOI18N
        Home.setForeground(new java.awt.Color(123, 123, 187));
        Home.setText("Home");
        PurpleLayout.add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 5, -1, 38));

        Genius.setFont(new java.awt.Font("Roboto Slab", 1, 18)); // NOI18N
        Genius.setForeground(new java.awt.Color(123, 123, 187));
        Genius.setText("Genius");
        PurpleLayout.add(Genius, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 25, -1, 30));

        HouseIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeButton.png"))); // NOI18N
        PurpleLayout.add(HouseIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PurpleLayout, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PurpleLayout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // create and show recipe book view
        RecipeBook1 recipeBook = new RecipeBook1();
        recipeBook.setVisible(true);

        dispose();

    }//GEN-LAST:event_backButtonActionPerformed

    private void ingredientPlusButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientPlusButtActionPerformed
        // TODO add your handling code here:
        String ingredient = ingredientBox.getText();

        if (!ingredient.isEmpty()) {
            String ingList = ingListArea.getText();
            if (ingList.isEmpty()) {
                ingListArea.setText(ingredient);
            } else {
                ingListArea.setText(ingList + "\n" + ingredient);
            }
            ingredientBox.setText("");

        }
    }//GEN-LAST:event_ingredientPlusButtActionPerformed

    private void recipeNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipeNameBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_recipeNameBoxActionPerformed

    private int stepNumber = 1;
    private final List<String> stepsList = new ArrayList<>();
    private int currentSteps = 0;
    private int remainingSteps;
    HashMap<String, JLabel> stepLabels = new HashMap<>();
    boolean run = true;
    String steps = "";


    private void stepsPlusButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepsPlusButtActionPerformed
        // TODO add your handling code here:

        if (currentSteps == 4) {
            nextButt.doClick();
            currentSteps = 0;
        }
        

        //Get the instruction text from instructions input text area
        steps = stepsTextArea.getText();
        
        // Check if no input has been made
        if (steps.isEmpty()) {
            // Don't create step if there is no input 
            return;
        }

        // Add the step instruction to the list
        stepsList.add(steps);

        // Create a new JLabel with step number and instruction
        JLabel stepLabel = new javax.swing.JLabel();
        stepLabel.setFont(new java.awt.Font("Segoe UI", 1, 12));
        stepLabel.setForeground(new java.awt.Color(102, 102, 255));
        stepLabel.setText("  Step" + " " + stepNumber + ":  ");

        // Generate variable name for stepLabel
        String stepLabelName = "stepLabel" + stepNumber;

        // Adding step label to hashmap
        stepLabels.put(stepLabelName, stepLabel);
        // System.out.println(stepLabelName);

        // Create a new JTextArea within a JScrollPane
        JTextArea stepTextArea = new javax.swing.JTextArea();
        stepTextArea.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        stepTextArea.setBackground(new java.awt.Color(204, 204, 255));
        stepTextArea.setForeground(new java.awt.Color(51, 51, 51));
        stepTextArea.setLineWrap(true);
        stepTextArea.setWrapStyleWord(true);
        stepTextArea.setColumns(20);
        stepTextArea.setText(steps);

        JScrollPane stepScrollPane = new javax.swing.JScrollPane(stepTextArea);
        stepScrollPane.setBackground(new java.awt.Color(204, 204, 255));
        stepScrollPane.setBorder(null);
        stepScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        stepTextArea.setEditable(false);
        // make the text area read-only

        // Add the step label and text area to the panel
        JPanel stepPanel = new javax.swing.JPanel();
        stepPanel.setBackground(new java.awt.Color(204, 204, 255));

        stepPanel.setLayout(new java.awt.BorderLayout());
        stepPanel.add(stepLabel, BorderLayout.WEST);
        stepPanel.add(stepScrollPane, BorderLayout.CENTER);

        // Add the step panel to steps panel
        stepsPanel.add(stepPanel);
        stepsPanel.revalidate();
        stepsPanel.repaint();

        // Enable pagination button every 4 steps
        if (stepNumber % 4 == 0) {
            nextButt.setEnabled(true);
        } else {
            nextButt.setEnabled(false);
        }

        //boolean hasRun = false;
        if (stepNumber > 4) {
            prevButt.setEnabled(true);
        } else {
            prevButt.setEnabled(false);
        }
        // Increment the step number and current steps
        stepNumber++;
        currentSteps++;

        // Clear the instruction text area
        stepsTextArea.setText("");

    }//GEN-LAST:event_stepsPlusButtActionPerformed


    private void cookingTimeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cookingTimeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cookingTimeBoxActionPerformed

    private void nameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameBoxActionPerformed

    private void ingredientBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingredientBoxActionPerformed

    private byte[] image;

    private void addImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageActionPerformed
        // TODO add your handling code here:
        // create a file chooser object
        JFileChooser chooseImage = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png");
        chooseImage.setFileFilter(filter);

        // show the file chooser dialog and get the user's response
        int response = chooseImage.showOpenDialog(this);

        // check if the user selected a file
        if (response == JFileChooser.APPROVE_OPTION) {
            // get the selected file
            File selectedFile = chooseImage.getSelectedFile();

            // convert the image file to a byte array
            // resize image to desired dimensions of 140x120 and add it to the button as the new icon
            try {
                BufferedImage originalImage = ImageIO.read(selectedFile);
                Image resizedImage = originalImage.getScaledInstance(140, 120, Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(resizedImage);
                addImage.setIcon(icon);
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(originalImage, "jpg", baos);
                image = baos.toByteArray();
            } catch (IOException e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_addImageActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:

        String name = nameBox.getText();
        String time = cookingTimeBox.getText();
        // Separating the ingredients by a comma
        String ingredient = String.join(", ", Arrays.asList(ingListArea.getText().split("\\n")));

        // Check that all required fields are filled in
        List<String> missingFields = new ArrayList<String>();
        if (name.isEmpty()) {
            missingFields.add("Name");
        }
        if (time.isEmpty()) {
            missingFields.add("Cooking time");
        }
        if (ingredient.isEmpty()) {
            missingFields.add("Ingredients");
        }
        if (stepsList.isEmpty()) {
            missingFields.add("Instructions");
        }

        if (!missingFields.isEmpty()) {
            String message = "Error saving recipe: Missing input for the following fields:\n";
            for (String field : missingFields) {
                message += "- " + field + "\n";
            }
            JOptionPane.showMessageDialog(this, message);
            return;
        }

        // Parse the cooking time as an integer
        int cookingTime;
        try {
            cookingTime = Integer.parseInt(time);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error saving recipe: Invalid cooking time:\n" + "Accepted format: Numbers");
            return;
        }

        // Check if an image is present
        if (image == null) {
            int option = JOptionPane.showConfirmDialog(this, "Notice: Do you want to save the recipe without an image?", "Warning", JOptionPane.YES_NO_OPTION);
            if (option != JOptionPane.YES_OPTION) {
                // User clicked No, so cancel the save operation
                return;
            }
        }

        // Concatenate the steps into a single string
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < stepsList.size(); i++) {
            sb.append((i + 1) + ". " + stepsList.get(i) + "\n");
        }
        String directions = sb.toString();

        // Connect to the database
        try {
            RecipeDatabase recipeDb = new RecipeDatabase("jdbc:mysql://localhost:3306/recipe_app", "root", "Dini0626#");
            recipeDb.insertRecipe(name, cookingTime, ingredient, directions, image);
            JOptionPane.showMessageDialog(this, "Recipe saved successfully");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error saving recipe: " + e.getMessage());
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void prevButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtActionPerformed
        // TODO add your handling code here:
        System.out.println("Stepnumber before decrease is "+stepNumber);
        stepNumber--;
        System.out.println("ButtonPressed");
        stepsPanel.removeAll();
        if (stepNumber > 4 && stepNumber % 4 == 0) {

            generateSteps(stepNumber = stepNumber - 8);

        } else if(stepNumber > 4 && stepNumber % 4 != 0) {
            for (int testNumber = stepNumber; testNumber % 4 != 0; testNumber++) {
                System.out.println("Isn't dividable by 4 yet, currently: " + stepNumber);
                stepNumber++;
            }
            System.out.println("stepNumber after loop is " + stepNumber);
            generateSteps(stepNumber = stepNumber - 8);

        } else {
            prevButt.setEnabled(false);
            generateSteps(0);
        }

        stepsPanel.revalidate();
        stepsPanel.repaint();
    }//GEN-LAST:event_prevButtActionPerformed

    public int generateSteps(int stepNumber) {
        
        int test;
        System.out.println("remainingsteps top of generate is"+remainingSteps);
        if (remainingSteps > 3) {
            System.out.println("Its more than 3 it is" + remainingSteps);
            test = 4;
            System.out.println("Test is "+test);
        } else {
            System.out.println("Its less than 3 it is: "+ remainingSteps);
            test = remainingSteps;
            System.out.println("test is "+test);
        } 
        for (int x = 0; x < test; x++) {
            System.out.println(stepsList.get(stepNumber));
            // Create a new JLabel with step number and instruction
            JLabel stepLabel = new javax.swing.JLabel();
            stepLabel.setFont(new java.awt.Font("Segoe UI", 1, 12));
            stepLabel.setForeground(new java.awt.Color(102, 102, 255));
            int tempStepNr = stepNumber + 1;
            stepLabel.setText("  Step" + " " + tempStepNr + ":  ");

            // Create a new JTextArea within a JScrollPane
            JTextArea stepTextArea = new javax.swing.JTextArea();
            stepTextArea.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
            stepTextArea.setBackground(new java.awt.Color(204, 204, 255));
            stepTextArea.setForeground(new java.awt.Color(51, 51, 51));
            stepTextArea.setLineWrap(true);
            stepTextArea.setWrapStyleWord(true);
            stepTextArea.setColumns(20);
            stepTextArea.setText(stepsList.get(stepNumber));

            JScrollPane stepScrollPane = new javax.swing.JScrollPane(stepTextArea);
            stepScrollPane.setBackground(new java.awt.Color(204, 204, 255));
            stepScrollPane.setBorder(null);
            stepScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            stepTextArea.setEditable(false);
            // make the text area read-only

            // Add the step label and text area to the panel
            JPanel stepPanel = new javax.swing.JPanel();
            stepPanel.setBackground(new java.awt.Color(204, 204, 255));

            stepPanel.setLayout(new java.awt.BorderLayout());
            stepPanel.add(stepLabel, BorderLayout.WEST);
            stepPanel.add(stepScrollPane, BorderLayout.CENTER);

            // Add the step panel to steps panel
            stepsPanel.add(stepPanel);
            stepsPanel.revalidate();
            stepsPanel.repaint();
            nextButt.setEnabled(true);

            stepNumber++;
            stepCheck();
            
        }
        getRemainingSteps();
        System.out.println("remainingSteps after loop is " + remainingSteps);
        //System.out.println("stepNumber after is: " + stepNumber);
        //System.out.println(stepsList.size() + " - " + stepNumber + " = " + (stepsList.size() - stepNumber));
        return stepsList.size();
    }

    public void stepCheck() {
        int indexBounds = Integer.parseInt(stepsList.get(stepNumber));
        if (indexBounds <= 4) {
            prevButt.setEnabled(false);
        }
        if (indexBounds >= 4) {
            nextButt.setEnabled(true);
        }
    }

    private void nextButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtActionPerformed
        // TODO add your handling code here:

        stepsPanel.removeAll();
        //System.out.println("remainingSteps is: "+remainingSteps);
        generateSteps(stepNumber - 1);
        stepsPanel.revalidate();
        stepsPanel.repaint();

    }//GEN-LAST:event_nextButtActionPerformed

    public int getRemainingSteps() {
        System.out.println(stepsList.size() + "steplistsize");
        System.out.println(stepNumber + "stepNumber");
        remainingSteps = stepsList.size() - (stepNumber - 1);
        System.out.println("Remaining steps are "+ remainingSteps);
        return remainingSteps;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRecipe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRecipe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRecipe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRecipe.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRecipe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Genius;
    private javax.swing.JPanel GreyLayout;
    private javax.swing.JLabel Home;
    private javax.swing.JLabel HouseIcon;
    private javax.swing.JPanel PurpleLayout;
    private javax.swing.JButton addImage;
    private javax.swing.JLabel addRecipe;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField cookingTimeBox;
    private javax.swing.JTextArea ingListArea;
    private javax.swing.JScrollPane ingListScrollPane;
    private javax.swing.JSeparator ingSep;
    private javax.swing.JTextField ingredientBox;
    private javax.swing.JPanel ingredientList;
    private javax.swing.JButton ingredientPlusButt;
    private javax.swing.JLabel ingredients;
    private javax.swing.JLabel ingredientsHeader;
    private javax.swing.JSeparator instSeparator1;
    private javax.swing.JSeparator instSeparator2;
    private javax.swing.JLabel instruction;
    private javax.swing.JLabel instructions;
    private javax.swing.JPanel instructionsUpper;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nameBox;
    private javax.swing.JButton nextButt;
    private javax.swing.JButton prevButt;
    private javax.swing.JLabel recipeName;
    private javax.swing.JTextField recipeNameBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel stepsPanel;
    private javax.swing.JButton stepsPlusButt;
    private javax.swing.JScrollPane stepsScrollBox;
    private javax.swing.JTextArea stepsTextArea;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables
}
